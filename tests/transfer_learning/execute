#!/usr/bin/env bash

ROOT=$(dirname $0)

has_param() {
    local term="$1"
    shift
    for arg; do
        if [[ $arg == "$term" ]]; then
            return 0
        fi
    done
    return 1
}

. $ROOT/../../scripts/flags/declares.sh

variables["-o"]="output"
variables["--engine"]="engine"
variables["--times"]="times"
variables["--weights"]="weights"

. $ROOT/../../scripts/flags/arguments.sh

output=${output:-"/tmp/tests"}
engine=${engine:-""}
times=${times:-"10"}
weights=${weights:-","}

. $ROOT/../cases.sh

engine_flag=""
if [ "$engine" != "" ]; then
    engine_flag="--engine $engine"
fi

echo >> $output
if [ "$engine" = "" ]; then
    echo "Transfer Learning tests with DenseNet using $engine" >> $output
else
    echo "Transfer Learning tests with DenseNet" >> $output
fi

for config_path in ${test_cases[*]}; do
    if [ ! -f "$config_path" ] || [ "${config_path: -5}" != ".conf" ]; then
        continue
    fi

    for model_weights in $(echo $weights | tr ',' '\n'); do
        weights_flag=""
        if [ "$model_weights" = "" ]; then
            weights_flag="--model.weights $model_weights"
        fi

        message="Executing test case with config at $config_path"
        if [ "$model_weights" != "" ]; then
            message="Executing test case with config at $config_path with weights $model_weights"
        fi

        echo >> $output
        echo $message >> $output

        python $ROOT/../../src/transfer_learning/scripts/train/run_train.py --config $config_path $engine_flag $weights_flag
        python $ROOT/../../src/transfer_learning/scripts/eval/run_eval.py --config $config_path $engine_flag $weights_flag --times $times >> $output
    
        echo >> $output
    done
done
